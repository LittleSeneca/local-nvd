- name: Setup PostgreSQL Server and Database Locally on CentOS
  hosts: localhost
  become: true
  connection: local
  vars:
    ansible_python_interpreter: /usr/bin/python3
    db_name: nvd
    db_user: nvd-user
  tasks:
    - name: Install PostgreSQL server
      ansible.builtin.yum:
        name: postgresql-server
        state: present

    - name: Install wget
      ansible.builtin.yum:
        name: wget
        state: present

    - name: Check if PostgreSQL data directory is initialized
      ansible.builtin.stat:
        path: /var/lib/pgsql/data/PG_VERSION
      register: pgdata

    - name: Initialize PostgreSQL database
      ansible.builtin.command: postgresql-setup initdb
      changed_when: false
      when: not pgdata.stat.exists

    - name: Ensure PostgreSQL service is running and enabled
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true

    - name: Change pg_hba.conf to allow local access
      ansible.builtin.lineinfile:
        path: /var/lib/pgsql/data/pg_hba.conf
        regexp: '^local\s+all\s+all\s+peer'
        line: 'local all all trust'
        state: present

    - name: Configure postgresql.conf to listen on all addresses
      ansible.builtin.lineinfile:
        path: /var/lib/pgsql/data/postgresql.conf
        regexp: "^#listen_addresses = 'localhost'"
        line: "listen_addresses = '*'"
        state: present

    - name: Allow remote connections in pg_hba.conf
      ansible.builtin.lineinfile:
        path: /var/lib/pgsql/data/pg_hba.conf
        line: 'host all all 0.0.0.0/0 md5'
        insertafter: EOF
        state: present

    - name: Create PostgreSQL Database
      community.postgresql.postgresql_db:
        name: "{{ db_name }}"

    - name: Create PostgreSQL User
      community.postgresql.postgresql_user:
        db: "{{ db_name }}"
        name: "{{ db_user }}"
        priv: ALL
        role_attr_flags: LOGIN

    - name: Create database tables
      community.postgresql.postgresql_query:
        db: "{{ db_name }}"
        login_user: "{{ db_user }}"
        query: "{{ lookup('ansible.builtin.file', item) }}"
      with_items:
        - ./sql_scripts/cve_details.sql
        - ./sql_scripts/problem_types.sql
        - ./sql_scripts/cve_references.sql
        - ./sql_scripts/descriptions.sql
        - ./sql_scripts/configurations.sql
        - ./sql_scripts/impact.sql

    - name: Restart PostgreSQL service to apply changes
      ansible.builtin.service:
        name: postgresql
        state: restarted
